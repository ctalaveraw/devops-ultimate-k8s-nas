---
##                       ._____.   .__
##  _____    ____   _____|__\_ |__ |  |   ____             ____ _____    ______
##  \__  \  /    \ /  ___/  || __ \|  | _/ __ \   ______  /    \\__  \  /  ___/
##   / __ \|   |  \\___ \|  || \_\ \  |_\  ___/  /_____/ |   |  \/ __ \_\___ \
##  (____  /___|  /____  >__||___  /____/\___  >         |___|  (____  /____  >
##       \/     \/     \/        \/          \/               \/     \/     \/
##     a n s i b l e - n a s      https://github.com/davestephens/ansible-nas

###
### DO NOT EDIT THIS FILE!
### Add your customisations to inventories/<your_inventory>/group_vars/nas.yml
###

###
### General
###

## Wireguard config
wireguard_enabled: true
wireguard_available_externally: false

# Create admin username
admin_username: administrator
user_password: ""

# Your email and domain, used for Let's Encrypt SSL certs
vps_vpn_email: me@example.com

# Applications will have subdomain SSL certificates created if Traefik is enabled, e.g. ansible-nas.<your-domain>, nextcloud.<your-domain>
vps_vpn_domain: example.com

# What version of python ansible should use on target system (path to spesific binary)
ansible_python_interpreter: /usr/bin/python3

docker_home: "{{ docker_dir }}"

###
### Cloudflare
###

cloudflare_ddns_enabled: false

# Data directory for config file
cloudflare_data_directory: "{{ docker_home }}/cloudflare_ddns"

# Your domain name
cloudflare_zone: "{{ vps_vpn_domain }}"

# The hostname you want the container to update. You shouldn't need to change this.
cloudflare_host: "*.{{ cloudflare_zone }}"

# Cloudflare scoped token (https://github.com/joshuaavalon/docker-cloudflare#api-token)
# Make sure token permissions include #DNS:Edit and #Zone:Read
cloudflare_token: "abcdabcdabcd123412341234"

# Cloudflare Global API token
cloudflare_token_global: "abcdabcd123412341234"

# Set to true to make traffic go through the CloudFlare CDN.
# Note that if the cloudflare host is a wildcard (the default), this must be false, as cloudflare
# does not support http proxy of wildcard CNAMEs.
cloudflare_proxy: false

# Set to AAAA to use set IPv6 records instead of IPv4 records.
cloudflare_type: "A"

# specs
cloudflare_memory: 512MB

# docker
cloudflare_container_name: cloudflare-ddns

###
### Default variables
###

username: "{{ admin_username }}"
root_host: example.duckdns.org
enable_username_creation: yes
user_shell: /bin/bash
enable_passwordless_sudo: yes
# Whether or not you want to generate a public key pair for SSH auth
# The playbook will not generate a new pair if $HOME/.ssh/authorized_keys exists and isn't empty
enable_ssh_keygen: yes
# Uncomment this line if you already have a public SSH key and put your public key in it
# This overrides `enable_ssh_keygen`
# ssh_public_key: ""
authelia_host: "auth.{{ root_host }}"
wireguard_host: "wg.{{ root_host }}"
adguard_host: "adguard.{{ root_host }}"
wireguard_port: "51820"
# Possible choices: cloudflare, quad9, google
#
# In case you've enabled Adguard, Unbound and DoH functionality,
# this will also set upstream DoH resolvers for dnscrypt
dns_nameservers: cloudflare
# This will enable Adguard, Unbound and dnscrypt-proxy
# for secure DNS resolution with ad-blocking functionality
#
# The ad blocking is disabled by default, you need to navigate to
# adguard.your_domain.com to set it up.
enable_adguard_unbound_doh: false
# Language and time settings
# Check here for the list of possible locales
# https://docs.oracle.com/cd/E23824_01/html/E26033/glset.html
locale: en_US.UTF-8
timezone: America/New_York
# Set the time at which the system should reboot after installing updates (24H format)
autoupdate_reboot_time: 03:00
docker_dir: "/opt/docker"
# You can set it to a different port in order to avoid automated scanner bots
ssh_port: 22
# Optional e-mail for notifications (unattended upgrades, banned IPs, etc.)
# Leave everything in place if you don't want any notifications
email_login: "{{ vps_vpn_email }}"
email: "{{ email_login }}"
email_recipient: "{{ email_login }}"
email_smtp_host: smtp.localhost.com
email_smtp_port: 465
# MSMTP
msmtp_accounts:
  - account: mailbox
    host: "{{ email_smtp_host }}"
    port: "{{ email_smtp_port }}"
    auth: "on"
    from: "{{ email }}"
    user: "{{ email_login }}"
    password: "{{ email_password }}"
msmtp_default_account: "mailbox"
msmtp_alias_default: "{{ email }}"
enable_firewall: true
firewall_ports:
  - port: "{{ wireguard_port }}"
    proto: "udp"
  - port: "80"
    proto: "tcp"
  - port: "443"
    proto: "tcp"
  - port: "{{ ssh_port }}"
    proto: "tcp"
# Fail2Ban only comes with the SSH jail by default
enable_fail2ban: true
pip_install_packages:
  - name: docker
docker_users:
  - "{{ username }}"
