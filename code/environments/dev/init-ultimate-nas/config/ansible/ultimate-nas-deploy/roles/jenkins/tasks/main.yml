---
- name: Start Jenkins
  block:
    - name: Create Jenkins Directories
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ jenkins_user_id }}"
        group: "{{ jenkins_group_id }}"
        mode: "{{ jenkins_data_chmod }}"
        recurse: yes
      with_items:
        - "{{ jenkins_data_directory }}/jenkins-data"

    - name: Create Jenkins container
      docker_container:
        name: "{{ jenkins_container_name }}"
        image: "{{ jenkins_hostname }}/{{ jenkins_hostname }}:lts"
        pull: true
        privileged: true
        volumes:
          - "{{ jenkins_data_directory }}/jenkins-data/:/var/jenkins_home"
          - /var/run/docker.sock:/var/run/docker.sock
        env:
          TZ: "{{ ansible_nas_timezone }}"
          PUID: "{{ jenkins_user_id }}"
          PGID: "{{ jenkins_group_id }}"
        ports:
          - "{{ jenkins_port }}:{{ jenkins_port }}"
          - "{{ jenkins_port_http }}:{{ jenkins_port_http }}"
        restart_policy: unless-stopped
        memory : "{{ jenkins_memory }}"
        labels:
          traefik.enable: "{{ jenkins_available_externally | string }}"
          traefik.http.routers.jenkins.rule: "Host(`{{ jenkins_hostname }}.{{ ansible_nas_domain }}`)"
          traefik.http.routers.jenkins.tls.certresolver: "letsencrypt"
          traefik.http.routers.jenkins.tls.domains[0].main: "{{ ansible_nas_domain }}"
          traefik.http.routers.jenkins.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
          traefik.http.services.jenkins.loadbalancer.server.port: "{{ jenkins_port_http }}"
  when: jenkins_enabled is true

- name: Stop Jenkins
  block:
    - name: Stop Jenkins
      docker_container:
        name: "{{ jenkins_container_name }}"
        state: absent
  when: jenkins_enabled is false
