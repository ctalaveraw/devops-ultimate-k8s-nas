---
- name: Create unifi-controller Directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ unifi_data_directory }}"

- name: unifi-controller
  docker_container:
    name: "{{ unifi_hostname }}"
    image: "linuxserver/{{ unifi_hostname }}"
    pull: true
    volumes:
      - "{{ unifi_data_directory }}:/config:rw"
    ports:
      - "{{ unifi_port_admin_portal }}:{{ unifi_port_admin_portal }}"
      - "{{ unifi_port_stun }}:{{ unifi_port_stun }}/udp"
      - "{{ unifi_port_ap_discovery }}:{{ unifi_port_ap_discovery }}/udp"
      - "{{ unifi_port_device_communication }}:{{ unifi_port_device_communication }}"
      - "{{ unifi_port_discover_l2 }}:{{ unifi_port_discover_l2 }}/udp"
      - "{{ unifi_port_guest_https }}:{{ unifi_port_guest_https }}"
      - "{{ unifi_port_guest_http }}:{{ unifi_port_guest_http }}"
      - "{{ unifi_port_throughput_testing }}:{{ unifi_port_throughput_testing }}"
      - "{{ unifi_port_syslog }}:{{ unifi_port_syslog }}/udp"

    env:
      PUID: "{{ unifi_user_id }}"
      PGID: "{{ unifi_group_id }}"
      TZ: "{{ ansible_nas_timezone }}"
      MEM_LIMIT: "1024"
      MEM_STARTUP: "1024"
    restart_policy: unless-stopped
    
    memory : "{{ unifi_memory }}"
    labels:
      traefik.enable: "{{ unifi_available_externally | string }}"
      traefik.http.routers.unifi-controller.rule: "Host(`{{ unifi_hostname }}.{{ ansible_nas_domain }}`)"
      traefik.http.routers.unifi-controller.tls.certresolver: "letsencrypt"
      traefik.http.routers.unifi-controller.tls.domains[0].main: "{{ ansible_nas_domain }}"
      traefik.http.routers.unifi-controller.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
      traefik.http.services.unifi-controller.loadbalancer.server.port: "{{ unifi_port_admin_portal }}"
